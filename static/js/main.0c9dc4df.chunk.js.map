{"version":3,"sources":["components/search-box/search-box.component.jsx","components/card/card.component.jsx","components/card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","props","className","type","placeholder","aria-label","onChange","handleSearch","Card","console","log","alt","src","monster","id","name","email","phone","CardList","listMonsters","map","App","state","key","handleChange","bind","fetch","then","response","json","data","setState","e","this","target","value","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAEe,SAASA,EAAUC,GAC9B,OACI,qBAAKC,UAAU,YAAf,SACI,uBAAOA,UAAU,uBAAuBC,KAAK,SAASC,YAAY,SAASC,aAAW,SAASC,SAAUL,EAAMM,iB,YCF5G,SAASC,EAAKP,GAE3B,OADAQ,QAAQC,IAAIT,GAEV,sBAAKC,UAAU,iBAAf,UACE,qBACES,IAAI,MACJC,IAAG,+BAA0BX,EAAMY,QAAQC,GAAxC,4BAEL,6BAAKb,EAAMY,QAAQE,OACnB,4BAAId,EAAMY,QAAQG,QAClB,4BAAIf,EAAMY,QAAQI,W,MCTT,SAASC,EAASjB,GAE7B,OADAQ,QAAQC,IAAIT,GAER,qBAAKC,UAAU,YAAf,SACKD,EAAMkB,aAAaC,KAAI,SAAAP,GAAO,OAAK,cAACL,EAAD,CAAuBK,QAASA,GAArBA,EAAQC,S,ICoCpDO,E,kDAtCb,WAAYpB,GAAQ,IAAD,8BACjB,cAAMA,IACDqB,MAAQ,CACXH,aAAc,GACdI,IAAK,IAEP,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBANH,E,qDAQnB,WAAqB,IAAD,OAClBC,MACE,mHAECC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKC,SAAS,CAAEZ,aAAcW,S,0BAKlD,SAAaE,GACXC,KAAKF,SAAS,CAAER,IAAKS,EAAEE,OAAOC,U,oBAGhC,WAAU,IAAD,EACuBF,KAAKX,MAA3BH,EADD,EACCA,aAAcI,EADf,EACeA,IAChBa,EAAmBjB,EAAakB,QAAO,SAACxB,GAAD,OAC3CA,EAAQE,KAAKuB,cAAcC,SAAShB,EAAIe,kBAE1C,OACE,sBAAKpC,UAAU,MAAf,UACE,mDACA,cAACF,EAAD,CAAWO,aAAc0B,KAAKT,eAC9B,uBACA,cAACN,EAAD,CAAUC,aAAciB,W,GAjCdI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0c9dc4df.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function SearchBox(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" onChange={props.handleSearch} />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport './card.styles.css'\r\n\r\nexport default function Card(props) {\r\n  console.log(props);\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        alt=\"img\"\r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n      />\r\n      <h2>{props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n      <p>{props.monster.phone}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport Card from '../card/card.component'\r\nimport './card-list.styles.css'\r\n\r\nexport default function CardList(props) {\r\n    console.log(props)\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.listMonsters.map(monster =>  <Card key={monster.id} monster={monster} />)}\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\nimport SearchBox from \"./components/search-box/search-box.component.jsx\";\nimport \"./App.css\";\nimport CardList from \"./components/card-list/card-list.component.jsx\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listMonsters: [],\n      key: \"\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  componentDidMount() {\n    fetch(\n      \"https://jsonplaceholder.typicode.com/users?fbclid=IwAR1wi5ygrtpM22QInyWx8RL6-dsl8be7KATtLx6kmqA9l-YRqJbX_do6lwQ\"\n    )\n      .then((response) => response.json())\n      .then((data) => this.setState({ listMonsters: data }));\n  }\n  // handleChange = (e) => {\n  //   this.setState({ key: e.target.value });\n  // };\n  handleChange(e) {\n    this.setState({ key: e.target.value });\n  }\n\n  render() {\n    const { listMonsters, key } = this.state;\n    const filteredMonsters = listMonsters.filter((monster) =>\n      monster.name.toLowerCase().includes(key.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monsters Reolodex</h1>\n        <SearchBox handleSearch={this.handleChange} />\n        <br />\n        <CardList listMonsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}